name: Gradle
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/wrapper/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build
        run: ./gradlew build -x test
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: build/libs
      - name: Cleanup Gradle caches
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/wrapper/gradle-wrapper.properties') }}
            ${{ runner.os }}-gradle-
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Test
        run: ./gradlew test -x koverVerify
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: build/test-results/test
      - name: Run koverXmlReport
        if: always()
        run: ./gradlew koverXmlReport
      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v2
        with:
          files: build/reports/kover/project-xml/report.xml
      - name: Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
